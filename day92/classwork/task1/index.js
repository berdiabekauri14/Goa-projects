// https://jsonplaceholder.typicode.com/todos'
//  ამ მისამართზე გააგზავნეთ მოთხოვნა  fetch ფუნქციის დახმარებით, ახსენით რას აკეთებს ეს ფუნქცია, შემდეგ დაბეჭდეთ პირდაპირ დაბრუნებული დაპირება კონსოლში, ახსენით რა არის დაპირება რეალური ცხვორების მაგალითიდ, როცა დაპირება დამყარდება გამოიყენეთ then და  catch ფუნქციები და ახსენით მათი დანიშნულება, აგრეთვე ახსენით რა არის  json და რატომ არის json მეთოდი ასინქრონიზირებული

const promise = fetch("https://jsonplaceholder.typicode.com/todos");

// fetch ფუნქციის გამოყენებით ჩვენ წამოვიღებთ რაღაცა კოდს

promise.then(() => "Hello world!", () => "error");
promise.catch(() => "Error was been found");

// .then() მეთოდის გამოყენებით, ჩვენ დავბეჭდავთ რაღაცა მესიჯს რომელიც შეიძლება ან ჩვეულებრივი მესიჯი იყოს ან უცხო. როცა დამყარდება პირობა მაგდროს მერე გამოვა მესიჯი
// .catch მეთოდის გამოყენებით, ჩვენ დავბეჭდავღ ერორის მესიჯს. პირობაზე თუ მოხდა რაღაც ერორი მაგაზე გამოვა ერორის მესიჯი

console.log(promise);

// json არის მეთოდი რომელიც არის ასინქრონიზებული, ეს იმიტომ რომ არის ასინქრონიზირებული რადგან დრო დასჭირდება რომ წამოიღოს ობიეკტი რომელიც არის json-ის ფაილში